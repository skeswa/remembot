# Standalone workflow that publishes any packages having versions differing from
# their publishedVersion in package.json.
#
# This workflow is purely designed to be triggered by:
# - `release.yaml` following the creation of a new release
# - The `release.yaml` workflow when a release is created

name: Publish Drifted Packages

on:
  # Allows you to call this workflow from another one.
  workflow_call:

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

concurrency: publish-drifted-packages-${{ github.ref }}

jobs:
  # Find all packages having versions differing from their publishedVersion.
  find-drifted-packages:
    name: Find Drifted Packages
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      # Checkout the repository code.
      - name: Checkout Repo
        uses: actions/checkout@v4

      # Create a matrix of packages having versions differing from their publishedVersion.
      - name: Set matrix
        id: set-matrix
        run: |
          # Get all packages
          PACKAGES=$(find packages -maxdepth 1 -mindepth 1 -type d -exec basename {} \; | sort)

          # Create arrays for the matrix
          MATRIX_PACKAGES="["
          MATRIX_INCLUDE="["

          # Process each package
          for pkg in $PACKAGES; do
            # Skip empty entries
            [ -z "$pkg" ] && continue
            
            PKG_JSON="packages/$pkg/package.json"
            if [ ! -f "$PKG_JSON" ]; then
              echo "No package.json for $pkg, skipping"
              continue
            fi

            # Extract package version and publishedVersion
            PACKAGE_VERSION=$(node -p "require('./$PKG_JSON').version")
            PUBLISHED_VERSION=$(node -p "require('./$PKG_JSON').publishedVersion || ''")

            echo "Package: $pkg"
            echo "Package version: $PACKAGE_VERSION"
            echo "Published version: $PUBLISHED_VERSION"

            # Compare versions and add to matrix if they differ
            if [ "$PACKAGE_VERSION" != "$PUBLISHED_VERSION" ]; then
              echo "Versions differ for $pkg - adding to matrix"
              MATRIX_PACKAGES+="\"$pkg\"," 
              MATRIX_INCLUDE+="{\"package\":\"$pkg\"},"
            else
              echo "Versions match for $pkg - skipping"
            fi
          done

          # Remove trailing comma and close arrays
          MATRIX_PACKAGES="${MATRIX_PACKAGES%,}]"
          MATRIX_INCLUDE="${MATRIX_INCLUDE%,}]"

          # Create the final matrix JSON
          MATRIX="{\"package\":$MATRIX_PACKAGES,\"include\":$MATRIX_INCLUDE}"

          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
          echo "Generated matrix: $MATRIX"

  # Publish each drifted package using the reusable workflow.
  publish-packages:
    name: Publish Packages
    needs: find-drifted-packages
    # Only run this job if there are packages to publish.
    if: ${{ fromJson(needs.find-drifted-packages.outputs.matrix).package[0] != null }}
    strategy:
      matrix: ${{ fromJson(needs.find-drifted-packages.outputs.matrix) }}
      fail-fast: false
    uses: ./.github/workflows/publish-package.yaml
    secrets: inherit # Necessary for publishing
    with:
      package_name: ${{ matrix.package }}
