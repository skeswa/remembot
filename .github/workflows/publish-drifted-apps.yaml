# Standalone workflow that publishes any apps having versions differing from
# their k8s-deployed versions.
#
# This workflow is purely designed to be triggered by:
# - `release.yaml` following the creation of a new release
# - The `release-and-publish.yaml` workflow when a release is created

name: Publish Drifted Apps

on:
  # Allows you to call this workflow from another one.
  workflow_call:
    secrets: []

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  # Find all apps having versions differing from their k8s-deployed versions.
  find-drifted-apps:
    name: Find Drifted Apps
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      # Checkout the repository code.
      - name: Checkout Repo
        uses: actions/checkout@v4

      # Create a matrix of apps having versions differing from their
      # k8s-deployed versions.
      - name: Set matrix
        id: set-matrix
        run: |
          # Get all apps
          APPS=$(find apps -maxdepth 1 -mindepth 1 -type d -exec basename {} \; | sort)

          # Create arrays for the matrix
          MATRIX_APPS="["
          MATRIX_INCLUDE="["

          # Process each app
          for app in $APPS; do
            # Skip empty entries
            [ -z "$app" ] && continue
            
            # Extract package version
            PACKAGE_VERSION=$(node -p "require('./apps/$app/package.json').version")
            
            # Extract k8s deployment version using grep and sed
            K8S_VERSION=$(grep -o "image:.*:.*" "apps/$app/k8s/deployment.yaml" | sed -n "s/.*:\(.*\)/\1/p")
            
            echo "App: $app"
            echo "Package version: $PACKAGE_VERSION"
            echo "K8s version: $K8S_VERSION"
            
            # Compare versions and add to matrix if they differ
            if [ "$PACKAGE_VERSION" != "$K8S_VERSION" ]; then
              echo "Versions differ for $app - adding to matrix"
              MATRIX_APPS+="\"$app\","
              MATRIX_INCLUDE+="{\"app\":\"$app\"},"
            else
              echo "Versions match for $app - skipping"
            fi
          done

          # Remove trailing comma and close arrays
          MATRIX_APPS="${MATRIX_APPS%,}]"
          MATRIX_INCLUDE="${MATRIX_INCLUDE%,}]"

          # Create the final matrix JSON
          MATRIX="{\"app\":$MATRIX_APPS,\"include\":$MATRIX_INCLUDE}"

          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
          echo "Generated matrix: $MATRIX"

  # Publish each drifted app using the reusable workflow.
  publish-apps:
    name: Publish Apps
    needs: find-drifted-apps
    # Only run this job if there are apps to publish.
    if: ${{ fromJson(needs.find-drifted-apps.outputs.matrix).app[0] != null }}
    strategy:
      matrix: ${{ fromJson(needs.find-drifted-apps.outputs.matrix) }}
      fail-fast: false
    uses: ./.github/workflows/publish-app.yaml
    with:
      app_name: ${{ matrix.app }}
