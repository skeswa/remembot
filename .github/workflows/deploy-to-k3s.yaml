name: Deploy to k3s

on:
  push:
    branches:
      - main
    paths:
      - 'apps/*/k8s/**'

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}

jobs:
  detect-changed-apps:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Find changed apps
        id: find-changes
        run: |
          # Get all changed files between the last two commits
          CHANGED_FILES=$(git diff --name-only HEAD~1..HEAD)
          
          # Extract app names from changed k8s files paths
          CHANGED_APPS=$(echo "$CHANGED_FILES" | grep -o 'apps/[^/]*/k8s/' | sed 's|apps/||g' | sed 's|/k8s/||g' | sort -u)
          
          # Create a JSON array of changed apps
          APPS_JSON=$(echo "$CHANGED_APPS" | jq -R -s -c 'split("\n") | map(select(length > 0))')
          
          echo "Changed apps: $APPS_JSON"
          echo "changed_apps=$APPS_JSON" >> $GITHUB_OUTPUT

      - name: Set matrix
        id: set-matrix
        run: |
          # Get the JSON array of changed apps
          CHANGED_APPS='${{ steps.find-changes.outputs.changed_apps }}'
          
          # Create a matrix object
          MATRIX_JSON=$(echo '{"app": '"$CHANGED_APPS"'}')
          
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT
          echo "Matrix: $MATRIX_JSON"

  deploy:
    needs: detect-changed-apps
    # Only run this job if there are apps to deploy
    if: ${{ fromJson(needs.detect-changed-apps.outputs.matrix).app[0] != null }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-changed-apps.outputs.matrix) }}
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Setup k3s configuration
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy ${{ matrix.app }}
        run: |
          echo "Deploying ${{ matrix.app }}..."
          
          # Apply all Kubernetes manifests for this app
          kubectl apply -f apps/${{ matrix.app }}/k8s/
          
          # Restart the deployment
          kubectl rollout restart deployment ${{ matrix.app }}
          
          echo "${{ matrix.app }} deployed successfully" 